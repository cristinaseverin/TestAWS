{"version":3,"sources":["components/Navigation.jsx","components/Footer.jsx","components/Start.jsx","components/Administration.jsx","components/Berichte.jsx","components/Info.jsx","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","location","pathname","Footer","class","style","zIndex","startData","label","teilnehmer","vorname","nachname","status","pnr","description","closedData","Start","length","map","tab","Accordion","key","Card","Toggle","as","Header","eventKey","Collapse","Body","user","abfrage","abfragen","titel","beschreibung","start","ende","aktiv","fragen","Administration","React","useState","show","setShow","handleClose","Button","marginBottom","onClick","Table","responsive","striped","hover","variant","index","Modal","opacity","centered","onHide","closeButton","Title","Berichte","themeSelect","theme","colors","primary25","primary50","primary","Info","useLocation","console","log","options","text","value","i","j","parseInt","push","paddingLeft","paddingRight","frage","Form","Label","checked","onlabel","offlabel","defaultValue","name","classNamePrefix","isMulti","option","title","e","elems","document","getElementsByClassName","classList","remove","getElementById","add","handleOptionChange","data-original-title","Control","rows","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.212c51e2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport './Navigation.css';\r\n\r\nfunction Navigation(props) {\r\n    return (\r\n        <div className=\"navigation\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Abfrage App\r\n          </Link>\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-toggle=\"collapse\"\r\n                        data-target=\"#navbarResponsive\"\r\n                        aria-controls=\"navbarResponsive\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                    >\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li\r\n                                className={`nav-item  ${\r\n                                    props.location.pathname === \"/\" ? \"active\" : \"\"\r\n                                    }`}\r\n                            >\r\n                                <Link className=\"nav-link\" to=\"/\">\r\n                                    Start\r\n                  <span className=\"sr-only\">(current)</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li\r\n                                className={`nav-item  ${\r\n                                    props.location.pathname === \"/administration\" ? \"active\" : \"\"\r\n                                    }`}\r\n                            >\r\n                                <Link className=\"nav-link\" to=\"/administration\">\r\n                                    Administration\r\n                </Link>\r\n                            </li>\r\n                            <li\r\n                                className={`nav-item  ${\r\n                                    props.location.pathname === \"/berichte\" ? \"active\" : \"\"\r\n                                    }`}\r\n                            >\r\n                                <Link className=\"nav-link\" to=\"/berichte\">\r\n                                    Berichte\r\n                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Navigation);","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <footer class=\"py-2 bg-dark fixed-bottom\" style={{ zIndex: 0 }}>\r\n                <div class=\"container\">\r\n                    <p class=\"m-0 text-center text-white\">\r\n                        Powered by ITH/A Sindelfingen\r\n          </p>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { Accordion, Card, Button } from \"react-bootstrap\";\r\nimport './Start.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//status: 0 not started, status: 1 in progress, status 2: completed\r\nlet startData = [{\r\n    id: 1, label: \"Abfrage 1\", teilnehmer: [\r\n        { id: 1, vorname: \"Cristina\", nachname: \"Severin\", status: 0, pnr: \"123456\" },\r\n        { id: 1, vorname: \"Timor\", nachname: \"Bader\", status: 1, pnr: \"236214\" },\r\n        { id: 1, vorname: \"Benjamin\", nachname: \"Koubik\", status: 2, pnr: \"648831\" },\r\n        { id: 1, vorname: \"Cristina\", nachname: \"Severin\", status: 0, pnr: \"123456\" },\r\n        { id: 1, vorname: \"Timor\", nachname: \"Bader\", status: 1, pnr: \"236214\" },],\r\n    description: \"Teilnehmer Abfrage 1\"\r\n},\r\n{\r\n    id: 2, label: \"Abfrage 2\", teilnehmer: [\r\n        { id: 1, vorname: \"Cristina\", nachname: \"Severin\", status: 2, pnr: \"123456\" },\r\n        { id: 1, vorname: \"Timor\", nachname: \"Bader\", status: 2, pnr: \"236214\" },\r\n        { id: 1, vorname: \"Benjamin\", nachname: \"Koubik\", status: 2, pnr: \"648831\" }, { id: 1, vorname: \"Cristina\", nachname: \"Severin\", status: 0, pnr: \"123456\" },\r\n        { id: 1, vorname: \"Timor\", nachname: \"Bader\", status: 2, pnr: \"236214\" },\r\n        { id: 1, vorname: \"Benjamin\", nachname: \"Koubik\", status: 2, pnr: \"648831\" }], description: \"Teilnehmer Abfrage 2\"\r\n},\r\n{\r\n    id: 3, label: \"Abfrage 3\", teilnehmer: [\r\n        { id: 1, vorname: \"Cristina\", nachname: \"Severin\", status: 2, pnr: \"123456\" },\r\n        { id: 1, vorname: \"Timor\", nachname: \"Bader\", status: 1, pnr: \"236214\" },\r\n        { id: 1, vorname: \"Benjamin\", nachname: \"Koubik\", status: 2, pnr: \"648831\" },\r\n        { id: 1, vorname: \"Cristina\", nachname: \"Severin\", status: 2, pnr: \"123456\" },], description: \"Teilnehmer Abfrage 3\"\r\n}];\r\n\r\n\r\nlet closedData = [{\r\n    id: 3, label: \"Abfrage 4\", teilnehmer: [\r\n        { id: 1, vorname: \"Cristina\", nachname: \"Severin\", status: 2, pnr: \"123456\" },\r\n        { id: 1, vorname: \"Timor\", nachname: \"Bader\", status: 2, pnr: \"236214\" },\r\n        { id: 1, vorname: \"Benjamin\", nachname: \"Koubik\", status: 2, pnr: \"648831\" },\r\n        { id: 1, vorname: \"Cristina\", nachname: \"Severin\", status: 2, pnr: \"123456\" },], description: \"Teilnehmer Abfrage 3\"\r\n}];\r\n\r\nfunction Start() {\r\n    return (\r\n        <div className=\"start\">\r\n            <div class=\"container\">\r\n                <div class=\"row align-items-center my-5\">\r\n\r\n                    <div class=\"col-lg-12\">\r\n\r\n                        <h3 class=\"whiteTxt\">Sie haben {startData.length} offene Abfragen</h3>\r\n\r\n                        {startData.map(tab => (\r\n                            <Accordion key={tab.id} >\r\n                                <Card>\r\n                                    <Accordion.Toggle as={Card.Header} eventKey={tab.id} className=\"accordionTitel\">\r\n\r\n                                        {tab.label}\r\n\r\n                                    </Accordion.Toggle>\r\n                                    <Accordion.Collapse eventKey={tab.id}>\r\n                                        <Card.Body>\r\n                                            <div class=\"col-lg-12\">\r\n\r\n                                                {tab.teilnehmer.map(teilnehmer => (\r\n                                                    <div class=\"col-lg-3 col-md-4 col-sm-6 col-xs-12\">\r\n                                                        <Link\r\n                                                            to={{\r\n                                                                pathname: '/info',\r\n                                                                user: teilnehmer,\r\n                                                                abfrage: { id: tab.id, label: tab.label }\r\n                                                            }}\r\n                                                        >\r\n                                                            <div class=\"thumbnail t2 thumbnailInactiv \">\r\n                                                                <div className=\"nameBlock\">{teilnehmer.vorname} <br></br>\r\n                                                                    <b>{teilnehmer.nachname}</b><br></br>\r\n                                                PNR: {teilnehmer.pnr}</div>\r\n                                                                {teilnehmer.status == 2 ?\r\n                                                                    <div className=\"dataBlock\">\r\n                                                                        <span class=\"glyphicon glyphicon-ok greenCheck\"></span>\r\n                                                                    </div> : \"\"\r\n                                                                }\r\n                                                            </div>\r\n                                                        </Link>\r\n                                                    </div>))}\r\n                                            </div>\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                            </Accordion>\r\n                        ))}\r\n                    </div>\r\n\r\n\r\n\r\n                    <div class=\"col-lg-12\">\r\n\r\n                        <h3 class=\"whiteTxt\">Sie haben {closedData.length} abgeschlossene Abfragen</h3>\r\n\r\n                        {closedData.map(tab => (\r\n                            <Accordion key={tab.id} >\r\n                                <Card>\r\n                                    <Accordion.Toggle as={Card.Header} eventKey={tab.id} className=\"accordionTitelClosed\">\r\n\r\n                                        {tab.label}\r\n\r\n                                    </Accordion.Toggle>\r\n                                    <Accordion.Collapse eventKey={tab.id}>\r\n                                        <Card.Body>\r\n                                            <div class=\"col-lg-12\">\r\n\r\n                                                {tab.teilnehmer.map(teilnehmer => (\r\n                                                    <div class=\"col-lg-3 col-md-4 col-sm-6 col-xs-12\">\r\n                                                        <div class=\"thumbnail t2 thumbnailInactiv \">\r\n                                                            <div className=\"nameBlock\">{teilnehmer.vorname} <br></br>\r\n                                                                <b>{teilnehmer.nachname}</b><br></br>\r\n                                                PNR: {teilnehmer.pnr}</div>\r\n                                                            {teilnehmer.status == 2 ?\r\n                                                                <div className=\"dataBlock\">\r\n                                                                    <span class=\"glyphicon glyphicon-ok greenCheck\"></span>\r\n                                                                </div> : \"\"\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>))}\r\n                                            </div>\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                            </Accordion>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Start;","import React from \"react\";\r\nimport { Button, Form, Table } from \"react-bootstrap\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport './Administration.css';\r\n\r\nlet abfragen = [{ id: 1, titel: \"Abfrage 1\", beschreibung: \"Beschreibung Abfrage 1\", start: \"01.09.2020\", ende: \"31.12.2020\", aktiv: true, fragen: [], teilnehmer: [] },\r\n{ id: 2, titel: \"Abfrage 2\", beschreibung: \"Beschreibung Abfrage 2\", start: \"02.09.2020\", ende: \"31.12.2020\", aktiv: false, fragen: [], teilnehmer: [] },\r\n{ id: 3, titel: \"Abfrage 3\", beschreibung: \"Beschreibung Abfrage 2\", start: \"03.09.2020\", ende: \"31.12.2020\", aktiv: true, fragen: [], teilnehmer: [] },\r\n{ id: 4, titel: \"Abfrage 4\", beschreibung: \"Beschreibung Abfrage 4\", start: \"04.09.2020\", ende: \"31.12.2020\", aktiv: true, fragen: [], teilnehmer: [] }];\r\nfunction Administration() {\r\n\r\n    const [show, setShow] = React.useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <div className=\"Administration\">\r\n            <div class=\"container\">\r\n                <div class=\"row align-items-center my-5\">\r\n                    <div class=\"col-lg-12\">\r\n\r\n                        <h3 class=\"whiteTxt\">Vorhandene Abfragen</h3>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-12\">\r\n                        <Button style={{ marginBottom: 15 }} onClick={handleShow}>Neue Abfrage erstellen</Button>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-12\">\r\n                        <Table responsive striped hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th key={1}>Titel</th>\r\n                                    <th key={2}>Beschreibung</th>\r\n                                    <th key={3}>Start</th>\r\n                                    <th key={4}>Ende</th>\r\n                                    <th key={5}>Aktiv</th>\r\n                                    <th key={6}>Aktionen</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {abfragen.map((abfrage, index) => (\r\n                                    <tr>\r\n                                        <td>{abfrage.titel}</td>\r\n                                        <td>{abfrage.beschreibung}</td>\r\n                                        <td>{abfrage.start}</td>\r\n                                        <td>{abfrage.ende}</td>\r\n                                        <td>{abfrage.aktiv}</td>\r\n                                        <td><Button>Bearbeiten</Button></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n\r\n                    <Modal style={{ opacity: 1 }} centered show={show} onHide={handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Modal heading</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Close\r\n          </Button>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Save Changes\r\n          </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Administration;","import React from \"react\";\r\n\r\nfunction Berichte() {\r\n    return (\r\n        <div className=\"berichte\">\r\n            <div class=\"container\">\r\n                <div class=\"row align-items-center my-5\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Berichte;","import React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport Select from 'react-select';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\nimport './Info.css';\r\n\r\nconst themeSelect = theme => ({\r\n    ...theme,\r\n    colors: {\r\n        ...theme.colors,\r\n        primary25: \"#f3f3f3\",\r\n        primary50: \"#f3f3f3\",\r\n        primary: \"black\"\r\n\r\n    }\r\n\r\n});\r\n\r\nfunction handleOptionChange(e, id, value) {\r\n    var elems = document.getElementsByClassName(\"rationgBlock\" + id);\r\n    for (var i = 0; i < elems.length; i++) {\r\n        elems[i].classList.remove(\"ratingClicked\");\r\n    }\r\n    var elemChange = document.getElementById(\"ratingElem\" + id + \"_\" + value);\r\n    elemChange.classList.add(\"ratingClicked\");\r\n}\r\n\r\nfunction Info(props) {\r\n    let location = useLocation();\r\n\r\n    if (location.user == null) {\r\n        location = {\r\n            \"user\": {\r\n                \"id\": 1,\r\n                \"nachname\": \"Severin\",\r\n                \"pnr\": \"123456\",\r\n                \"status\": 0,\r\n                \"vorname\": \"Cristina\",\r\n            },\r\n            \"abfrage\": {\r\n                \"id\": 1,\r\n                \"label\": \"Abfrage 1\"\r\n            }\r\n        }\r\n    }\r\n    console.log(location.user);\r\n    console.log(location.abfrage);\r\n    //1: ja, nein\r\n    //2: radio buttons\r\n    //3: multi select\r\n    //4: skala\r\n    //5: free text\r\n    let fragen = [\r\n        { id: 1, titel: \"Möchten Sie Homeoffice machen?\", description: \"description 1\", type: 1, options: [], text: \"\" },\r\n        //  { id: 11, titel: \"Haben Sie alle Programme auf dem Laptop?\", description: \"description 11\", type: 1, options: [], text: \"\" },\r\n        {\r\n            id: 2, titel: \"Wann können Sie arbeiten?\", description: \"description 2\", type: 2, options: [\r\n                { value: 1, label: \"morgens\" },\r\n                { value: 2, label: \"mittags\" },\r\n                { value: 3, label: \"abends\" }], text: \"\"\r\n        },\r\n        {\r\n            id: 3, titel: \"Welche Geräte brauchen Sie?\", description: \"description 3\", type: 3, options: [\r\n                { value: 1, label: \"Laptop\" },\r\n                { value: 2, label: \"Handy\" },\r\n                { value: 3, label: \"2 Monitore\" },\r\n                { value: 4, label: \"Papiere und Stifte\" }], text: \"\"\r\n        },\r\n        /*   {\r\n               id: 31, titel: \"Welche andere Geräte brauchen Sie?\", description: \"description 31\", type: 3, options: [\r\n                   { value: 1, label: \"Laptop\" },\r\n                   { value: 2, label: \"Handy\" },\r\n                   { value: 3, label: \"2 Monitore\" },\r\n                   { value: 4, label: \"Papiere und Stifte\" }], text: \"\"\r\n           },\r\n           */\r\n        {\r\n            id: 4, titel: \"Wie gefällt Ihnen Homeoffice?\", description: \"description 4\", type: 4, options: [], text: \"5\",\r\n        },\r\n        {\r\n            id: 41, titel: \"Wie gefällt Ihnen Homeoffice?\", description: \"description 41\", type: 4, options: [], text: \"6\",\r\n        },\r\n        {\r\n            id: 5, titel: \"Weitere Kommentare\", type: 5, description: \"description 5\", options: [], text: \"\",\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    for (var i = 0; i < fragen.length; i++) {\r\n        if (fragen[i].type == 4) {\r\n            for (var j = 0; j < parseInt(fragen[i].text); j++)\r\n                fragen[i].options.push({ \"value\": (j + 1) });\r\n        }\r\n    }\r\n\r\n    console.log(fragen);\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"info\">\r\n            <div class=\"container\">\r\n                <div class=\"row align-items-center\">\r\n                    <div class=\"col-lg-12\">\r\n\r\n                        <h3 class=\"whiteTxt\">{location.user.nachname}, {location.user.vorname}</h3>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-12\">\r\n\r\n                        <h3 class=\"whiteTxt\">{location.abfrage.label}</h3>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"row\" style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n                        {fragen.map((frage, index) => (\r\n                            <>\r\n\r\n                                {frage.type == 1 ?\r\n                                    (< div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\" ><Form.Label className=\"abfrageLabel\">{index + 1}. {frage.titel}: </Form.Label>\r\n                                        <BootstrapSwitchButton\r\n                                            className=\"switchAbfrage\"\r\n                                            checked={false}\r\n                                            onlabel='Ja'\r\n                                            offlabel='Nein'\r\n                                        /*   onChange={(checked: boolean) => {\r\n                                               this.setState({ isUserAdmin: checked })\r\n                                           }} */\r\n                                        /> </div>) : \"\"}\r\n\r\n\r\n                                {frage.type == 2 ?\r\n                                    (< div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\" ><Form.Label className=\"abfrageLabel\">{index + 1}. {frage.titel}: </Form.Label>\r\n                                        <Select\r\n                                            defaultValue={[]}\r\n                                            name=\"multi\"\r\n                                            options={frage.options}\r\n                                            className=\"basic-multi-select select-info\"\r\n                                            classNamePrefix=\"select\"\r\n                                            theme={themeSelect}\r\n                                        /> </div>) : \"\"}\r\n\r\n                                {frage.type == 3 ?\r\n                                    (< div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\" ><Form.Label className=\"abfrageLabel\">{index + 1}. {frage.titel}: </Form.Label>\r\n                                        <Select\r\n                                            defaultValue={[]}\r\n                                            isMulti\r\n                                            name=\"multi\"\r\n                                            options={frage.options}\r\n                                            className=\"basic-multi-select select-info\"\r\n                                            classNamePrefix=\"select\"\r\n                                            theme={themeSelect}\r\n                                        /> </div>) : \"\"}\r\n\r\n                                {frage.type == 4 ?\r\n                                    (< div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\" ><Form.Label className=\"abfrageLabel\">{index + 1}. {frage.titel}: </Form.Label>\r\n                                        {frage.options.map((option, index) => (\r\n                                            <div data-toggle=\"tooltip\"\r\n                                                title=\"question\"\r\n                                                id={\"ratingElem\" + frage.id + \"_\" + option.value}\r\n                                                onClick={(e) => handleOptionChange(e, frage.id, option.value)}\r\n                                                className={\"ratingBlock rating rationgBlock\" + frage.id}\r\n                                                data-original-title=\"Sehr gut (Liegt weit über den Erwartungen, außergewöhnlicher Einsatz)\" status=\"\">{option.value}\r\n                                            </div>\r\n                                        ))}\r\n\r\n\r\n                                    </div>) : \"\"}\r\n\r\n\r\n                                {frage.type == 5 ?\r\n                                    (< div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\" ><Form.Label className=\"abfrageLabel\">{index + 1}. {frage.titel}: </Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows=\"3\" />\r\n                                    </div>) : \"\"}\r\n                            </>\r\n\r\n\r\n                        ))}\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-lg-12\">\r\n                        <Link\r\n                            to={{\r\n                                pathname: '/',\r\n                            }}><Button>Zurück</Button></Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Info;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Navigation, Footer, Start, Administration, Berichte, Info } from \"./components\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation />\n        <Switch>\n          <Route path=\"/\" exact component={() => <Start />} />\n          <Route path=\"/administration\" exact component={() => <Administration />} />\n          <Route path=\"/berichte\" exact component={() => <Berichte />} />\n          <Route path=\"/info\" exact component={() => <Info />} />\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/daimler_bootstrap/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}